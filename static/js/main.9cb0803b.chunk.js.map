{"version":3,"sources":["components/core/Dial/Dial.js","components/core/Oscilloscope/Oscilloscope.js","components/StepSequencer/StepSequencer.js","App.js","index.js"],"names":["Dial","_ref","_ref$min","min","_ref$max","max","_ref$value","value","_ref$mode","mode","_ref$interaction","interaction","_ref$size","size","onChange","uiProps","dialRef","useRef","useEffect","id","current","dial","Nexus","on","destroy","_jsx","Flex","_objectSpread","ref","Oscilloscope","destination","oscilloscopeRef","oscilloscope","connect","defaultProps","StepSequencer","_useState","useState","_useState2","_slicedToArray","play","setPlay","_useState3","_useState4","players","setPlayers","_useState5","_useState6","sequencer","setSequencer","_useState7","_useState8","isStart","setIsStart","_useState9","_useState10","BPM","setBPM","_useState11","_useState12","rows","_useState13","_useState14","columns","_useState15","_useState16","beat","_useState17","_useState18","masterVolume","setMasterVolume","_useState19","_useState20","volNode","setVolNode","seqRef","mainRef","Tone","toDestination","urls","baseUrl","undefined","volume","_seqRef$current","Sequencer","paddingRow","paddingColumn","colorize","rects","getElementsByTagName","i","length","rect","Math","floor","setAttribute","matrix","set","all","configLoop","bpm","scheduleRepeat","time","next","pattern","forEach","row","index","synth","player","start","Draggable","bounds","nodeRef","children","className","_jsxs","flexDir","mt","Slider","w","defaultValue","step","SliderTrack","SliderFilledTrack","SliderThumb","Button","colorScheme","onClick","e","stop","pl","pr","v","App","ChakraProvider","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cb0803b.chunk.js","sourcesContent":["import { Flex } from '@chakra-ui/react';\nimport Nexus from 'nexusui';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst Dial = ({ min = -60, max = 5.6, value = 0, mode = 'relative', interaction = 'radial', size = [75, 75], onChange, uiProps }) => {\n  const dialRef = useRef();\n\n  useEffect(() => {\n    const id = dialRef.current.id;\n    const dial = new Nexus.Dial(id, {\n      size,\n      interaction,\n      mode,\n      min,\n      max,\n      value,\n    });\n    dial.on('change', onChange);\n\n    return () => {\n      dial.destroy();\n    };\n  }, [dialRef]);\n\n  return <Flex ref={dialRef} {...uiProps}></Flex>;\n};\n\nexport default Dial;\n","import { Flex } from '@chakra-ui/react';\nimport Nexus from 'nexusui';\nimport React, { useEffect, useRef } from 'react';\n\nconst Oscilloscope = ({ uiProps, destination }) => {\n  const oscilloscopeRef = useRef();\n\n  useEffect(() => {\n    const id = oscilloscopeRef.current;\n    const oscilloscope = new Nexus.Oscilloscope(id);\n    oscilloscope.connect(destination);\n\n    return () => {\n      oscilloscope.destroy();\n    };\n  }, [oscilloscopeRef]);\n\n  return <Flex ref={oscilloscopeRef} {...uiProps}></Flex>;\n};\n\nexport default Oscilloscope;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Button, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Flex } from '@chakra-ui/react';\nimport * as Tone from 'tone';\nimport Nexus from 'nexusui';\nimport './StepSequencer.scss';\nimport Dial from '../core/Dial/Dial';\nimport Oscilloscope from '../core/Oscilloscope/Oscilloscope';\nimport Draggable from 'react-draggable';\n\nconst defaultProps = {\n  BPM: 120,\n  minBPM: 60,\n  maxBPM: 240,\n  BPMStep: 1,\n  rows: 4,\n  columns: 16,\n  beatOffset: 0,\n};\n\nconst StepSequencer = () => {\n  const [play, setPlay] = useState(false);\n  const [players, setPlayers] = useState();\n  const [sequencer, setSequencer] = useState();\n  const [isStart, setIsStart] = useState(false);\n  const [BPM, setBPM] = useState(defaultProps.BPM);\n  const [rows, setRows] = useState(defaultProps.rows);\n  const [columns, setColumns] = useState(defaultProps.columns);\n  let [beat, setBeat] = useState(defaultProps.beatOffset);\n  let [masterVolume, setMasterVolume] = useState(-20);\n  const [volNode, setVolNode] = useState();\n  const seqRef = useRef();\n  const mainRef = useRef();\n\n  useEffect(() => {\n    const volNode = new Tone.Volume(masterVolume).toDestination();\n    setVolNode(volNode);\n    // const players = new Tone.Players({\n    //   urls: {\n    //     0: 'A1.mp3',\n    //     1: 'Cs2.mp3',\n    //     2: 'E2.mp3',\n    //     3: 'Fs2.mp3',\n    //   },\n    //   fadeOut: '64n',\n    //   baseUrl: 'https://tonejs.github.io/audio/casio/',\n    // }).connect(volNode);\n    const players = new Tone.Players({\n      urls: {\n        0: 'kick.mp3',\n        1: 'hihat.mp3',\n        2: 'snare.mp3',\n        3: 'tom1.mp3',\n      },\n      // fadeOut: '64n',\n      // baseUrl: 'https://github.com/Tonejs/audio/tree/master/drum-samples/acoustic-kit/',\n      baseUrl: 'https://tonejs.github.io/audio/drum-samples/acoustic-kit/',\n    }).connect(volNode);\n    setPlayers(players);\n\n    return () => {\n      setPlayers(undefined);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (volNode) volNode.volume.value = masterVolume;\n  }, [masterVolume, volNode]);\n\n  useEffect(() => {\n    const id = seqRef?.current?.id;\n    const sequencer = new Nexus.Sequencer(id, {\n      size: [500, 160],\n      mode: 'toggle',\n      rows,\n      columns,\n      paddingRow: 5,\n      paddingColumn: 5,\n    });\n    sequencer.colorize('fill', '#51575B');\n    sequencer.colorize('accent', '#AABAC4');\n    const rects = seqRef.current.getElementsByTagName('rect');\n\n    for (let i = 0; i < rects.length; i++) {\n      const rect = rects[i];\n      const rem = Math.floor(i / 4);\n      rect.setAttribute('rx', 4);\n      if (rem % 2 === 1) {\n        // rect.setAttribute('fill', '#6C5B5C');\n      }\n    }\n    // sequencer.on('change', (v) => console.log(v));\n    sequencer.matrix.set.all([\n      [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],\n      [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ]);\n\n    setSequencer(sequencer);\n\n    return () => {\n      sequencer.destroy();\n      setSequencer(undefined);\n    };\n  }, [seqRef]);\n\n  const onClick = (e) => {\n    if (!isStart) {\n      Tone.start();\n      setIsStart(true);\n      configLoop(sequencer);\n    }\n    if (!play) {\n      Tone.Transport.start();\n    } else {\n      Tone.Transport.stop();\n    }\n    setPlay(!play);\n  };\n\n  const configLoop = (sequencer) => {\n    const repeat = (time) => {\n      sequencer.next();\n      const grid = sequencer.matrix.pattern;\n      grid.forEach((row, index) => {\n        let synth = players.player(index);\n        let note = row[beat];\n        if (note) synth.start(time, 0, '1n');\n      });\n\n      beat = (beat + 1) % columns;\n      // setBeat((beat + 1) % columns);\n    };\n\n    Tone.Transport.bpm.value = BPM;\n    Tone.Transport.scheduleRepeat(repeat, '16n');\n  };\n\n  const onBPMSliderChange = (value) => {\n    Tone.Transport.bpm.value = value;\n    setBPM(value);\n  };\n\n  return (\n    <Draggable bounds=\"parent\" nodeRef={mainRef}>\n      <Flex className=\"step-sequencer-container\" ref={mainRef}>\n        <Flex flexDir=\"column\" mt={5}>\n          <h3>{BPM} BPM</h3>\n          <Slider w=\"500px\" defaultValue={defaultProps.BPM} min={defaultProps.minBPM} max={defaultProps.maxBPM} step={defaultProps.BPMStep} onChange={onBPMSliderChange}>\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb />\n          </Slider>\n          <Oscilloscope uiProps={{ id: 'oscilloscope' }} destination={Tone.Destination} />\n          <Button colorScheme=\"blue\" onClick={onClick} pl={100} pr={100}>\n            {play ? 'Pause' : 'Play'}\n          </Button>\n          <Dial value={masterVolume} onChange={(v) => setMasterVolume(v)} uiProps={{ id: 'volume', mt: 5 }} />\n          <Flex id=\"sequencer\" mt={5} ref={seqRef}></Flex>\n        </Flex>\n      </Flex>\n    </Draggable>\n  );\n};\n\nexport default StepSequencer;\n","import { ChakraProvider } from '@chakra-ui/react';\nimport './App.scss';\nimport StepSequencer from './components/StepSequencer/StepSequencer';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <div className=\"App\">\n        <StepSequencer />\n      </div>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}