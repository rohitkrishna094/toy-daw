{"version":3,"sources":["components/core/Dial/Dial.js","components/core/Oscilloscope/Oscilloscope.js","components/core/PianoRoll/PianoRoll.js","components/StepSequencer/StepSequencer.js","App.js","index.js"],"names":["Dial","min","max","value","mode","interaction","size","onChange","uiProps","dialRef","useRef","useEffect","id","current","dial","Nexus","on","destroy","ref","Oscilloscope","destination","oscilloscopeRef","oscilloscope","connect","PianoRoll","pianoRollRef","editMode","style","overflowY","xRange","yRange","width","xScroll","yScroll","wheelZoom","markStart","markEnd","collt","coldk","colgrid","colnote","colnotesel","colnoteborder","colrulerbg","colrulerfg","kbwidth","defaultProps","StepSequencer","useState","play","setPlay","players","setPlayers","sequencer","setSequencer","isStart","setIsStart","BPM","setBPM","rows","columns","beat","masterVolume","setMasterVolume","volNode","setVolNode","seqRef","mainRef","Tone","toDestination","urls","0","1","2","3","baseUrl","undefined","volume","Sequencer","paddingRow","paddingColumn","colorize","rects","getElementsByTagName","i","length","rect","Math","floor","setAttribute","matrix","set","all","configLoop","bpm","scheduleRepeat","time","next","rawContext","ev","console","log","pattern","forEach","row","index","synth","player","start","bounds","nodeRef","className","flexDir","mt","w","defaultValue","step","colorScheme","onClick","e","stop","pl","pr","v","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b0dc233.chunk.js","sourcesContent":["import { Flex } from '@chakra-ui/react';\nimport Nexus from 'nexusui';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst Dial = ({ min = -60, max = 5.6, value = 0, mode = 'relative', interaction = 'radial', size = [75, 75], onChange, uiProps }) => {\n  const dialRef = useRef();\n\n  useEffect(() => {\n    const id = dialRef.current.id;\n    const dial = new Nexus.Dial(id, {\n      size,\n      interaction,\n      mode,\n      min,\n      max,\n      value,\n    });\n    dial.on('change', onChange);\n\n    return () => {\n      dial.destroy();\n    };\n  }, [dialRef]);\n\n  return <Flex ref={dialRef} {...uiProps}></Flex>;\n};\n\nexport default Dial;\n","import { Flex } from '@chakra-ui/react';\nimport Nexus from 'nexusui';\nimport React, { useEffect, useRef } from 'react';\n\nconst Oscilloscope = ({ uiProps, destination }) => {\n  const oscilloscopeRef = useRef();\n\n  useEffect(() => {\n    const id = oscilloscopeRef.current;\n    const oscilloscope = new Nexus.Oscilloscope(id);\n    oscilloscope.connect(destination);\n\n    return () => {\n      oscilloscope.destroy();\n    };\n  }, [oscilloscopeRef]);\n\n  return <Flex ref={oscilloscopeRef} {...uiProps}></Flex>;\n};\n\nexport default Oscilloscope;\n","import { Flex } from '@chakra-ui/react';\nimport 'webaudio-pianoroll';\nimport React from 'react';\n\nconst PianoRoll = ({ pianoRollRef }) => {\n  return (\n    <Flex>\n      <webaudio-pianoroll\n        ref={pianoRollRef}\n        editMode=\"dragpoly\"\n        style={{ overflowY: 'scroll' }}\n        xRange={256}\n        yRange={20}\n        width=\"1000\"\n        xScroll={1}\n        yScroll={1}\n        wheelZoom={1}\n        markStart={0}\n        markEnd={256}\n        collt=\"#34444E\"\n        coldk=\"#2E3E48\"\n        colgrid=\"#24343E\"\n        colnote=\"#A4D4AD\"\n        colnotesel=\"#AFD4BA\"\n        colnoteborder=\"#A4D4AD\"\n        colrulerbg=\"#1F2A32\"\n        colrulerfg=\"#b0b0b0\"\n        // colrulerborder=\"pink\"\n        kbwidth=\"80\"\n      />\n    </Flex>\n  );\n};\n\nexport default PianoRoll;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Button, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Flex } from '@chakra-ui/react';\nimport * as Tone from 'tone';\nimport Nexus from 'nexusui';\nimport './StepSequencer.scss';\nimport Dial from '../core/Dial/Dial';\nimport Oscilloscope from '../core/Oscilloscope/Oscilloscope';\nimport Draggable from 'react-draggable';\nimport PianoRoll from '../core/PianoRoll/PianoRoll';\n\nconst defaultProps = {\n  BPM: 120,\n  minBPM: 60,\n  maxBPM: 240,\n  BPMStep: 1,\n  rows: 4,\n  columns: 16,\n  beatOffset: 0,\n};\n\nconst StepSequencer = () => {\n  const [play, setPlay] = useState(false);\n  const [players, setPlayers] = useState();\n  const [sequencer, setSequencer] = useState();\n  const pianoRollRef = useRef();\n  const [isStart, setIsStart] = useState(false);\n  const [BPM, setBPM] = useState(defaultProps.BPM);\n  const [rows, setRows] = useState(defaultProps.rows);\n  const [columns, setColumns] = useState(defaultProps.columns);\n  let [beat, setBeat] = useState(defaultProps.beatOffset);\n  let [masterVolume, setMasterVolume] = useState(-20);\n  const [volNode, setVolNode] = useState();\n  const seqRef = useRef();\n  const mainRef = useRef();\n\n  useEffect(() => {\n    const volNode = new Tone.Volume(masterVolume).toDestination();\n    setVolNode(volNode);\n    // const players = new Tone.Players({\n    //   urls: {\n    //     0: 'A1.mp3',\n    //     1: 'Cs2.mp3',\n    //     2: 'E2.mp3',\n    //     3: 'Fs2.mp3',\n    //   },\n    //   fadeOut: '64n',\n    //   baseUrl: 'https://tonejs.github.io/audio/casio/',\n    // }).connect(volNode);\n    const players = new Tone.Players({\n      urls: {\n        0: 'kick.mp3',\n        1: 'hihat.mp3',\n        2: 'snare.mp3',\n        3: 'tom1.mp3',\n      },\n      // fadeOut: '64n',\n      // baseUrl: 'https://github.com/Tonejs/audio/tree/master/drum-samples/acoustic-kit/',\n      baseUrl: 'https://tonejs.github.io/audio/drum-samples/acoustic-kit/',\n    }).connect(volNode);\n    setPlayers(players);\n\n    return () => {\n      setPlayers(undefined);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (volNode) volNode.volume.value = masterVolume;\n  }, [masterVolume, volNode]);\n\n  useEffect(() => {\n    const id = seqRef?.current?.id;\n    const sequencer = new Nexus.Sequencer(id, {\n      size: [500, 160],\n      mode: 'toggle',\n      rows,\n      columns,\n      paddingRow: 5,\n      paddingColumn: 5,\n    });\n    sequencer.colorize('fill', '#51575B');\n    sequencer.colorize('accent', '#AABAC4');\n    const rects = seqRef.current.getElementsByTagName('rect');\n\n    for (let i = 0; i < rects.length; i++) {\n      const rect = rects[i];\n      const rem = Math.floor(i / 4);\n      rect.setAttribute('rx', 4);\n      if (rem % 2 === 1) {\n        // rect.setAttribute('fill', '#6C5B5C');\n      }\n    }\n    // sequencer.on('change', (v) => console.log(v));\n    sequencer.matrix.set.all([\n      [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],\n      [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ]);\n\n    setSequencer(sequencer);\n\n    return () => {\n      sequencer.destroy();\n      setSequencer(undefined);\n    };\n  }, [seqRef]);\n\n  const onClick = (e) => {\n    if (!isStart) {\n      Tone.start();\n      setIsStart(true);\n      configLoop(sequencer);\n    }\n    if (!play) {\n      Tone.Transport.start();\n    } else {\n      Tone.Transport.stop();\n      pianoRollRef.current.stop();\n    }\n    setPlay(!play);\n  };\n\n  const configLoop = (sequencer) => {\n    const repeat = (time) => {\n      sequencer.next();\n      pianoRollRef.current.play(Tone.getContext().rawContext, (ev) => {\n        console.log(ev);\n      });\n      const grid = sequencer.matrix.pattern;\n      grid.forEach((row, index) => {\n        let synth = players.player(index);\n        let note = row[beat];\n        if (note) synth.start(time, 0, '1n');\n      });\n\n      beat = (beat + 1) % columns;\n      // setBeat((beat + 1) % columns);\n    };\n\n    Tone.Transport.bpm.value = BPM;\n    Tone.Transport.scheduleRepeat(repeat, '16n');\n  };\n\n  const onBPMSliderChange = (value) => {\n    Tone.Transport.bpm.value = value;\n    setBPM(value);\n  };\n\n  return (\n    <Draggable bounds=\"parent\" nodeRef={mainRef}>\n      <Flex className=\"step-sequencer-container\" ref={mainRef}>\n        <PianoRoll pianoRollRef={pianoRollRef} />\n        <Flex flexDir=\"column\" mt={5}>\n          <h3>{BPM} BPM</h3>\n          <Slider w=\"500px\" defaultValue={defaultProps.BPM} min={defaultProps.minBPM} max={defaultProps.maxBPM} step={defaultProps.BPMStep} onChange={onBPMSliderChange}>\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb />\n          </Slider>\n          <Oscilloscope uiProps={{ id: 'oscilloscope' }} destination={Tone.Destination} />\n          <Button colorScheme=\"blue\" onClick={onClick} pl={100} pr={100}>\n            {play ? 'Pause' : 'Play'}\n          </Button>\n          <Dial value={masterVolume} onChange={(v) => setMasterVolume(v)} uiProps={{ id: 'volume', mt: 5 }} />\n          <Flex id=\"sequencer\" mt={5} ref={seqRef}></Flex>\n        </Flex>\n      </Flex>\n    </Draggable>\n  );\n};\n\nexport default StepSequencer;\n","import { ChakraProvider } from '@chakra-ui/react';\nimport './App.scss';\nimport StepSequencer from './components/StepSequencer/StepSequencer';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <div className=\"App\">\n        <StepSequencer />\n      </div>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}